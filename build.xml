<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="help" name="EasyBooking_Server">    
	<property environment="env"/>
	<property name="src.dir" location="src"/>
   	<property name="bin.dir" location="bin"/>
	<property name="resources.dir" location="resources"/>
	<property name="lib.dir" location="lib"/>
	<property name="dist.dir" location="dist"/>
	<property name="export.file" value="EasyBooking.jar"/>
	<property name="rmireg.server.port" value="1099"/>
	<property name="rmireg.server.IP" value="127.0.0.1"/>
	<property name="server.name" value="EasyBooking_Server"/>
	<property name="policy.file" location="security/java.policy"/>
	
    <!-- Classpath -->
    <path id="full.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${bin.dir}"/>
        <pathelement location="${resources.dir}"/>
    </path>
	
	<!-- TARGET : clean -->
	    <target name="clean">
	        <delete includeEmptyDirs="true" quiet="true">
	            <fileset dir="${bin.dir}" includes="**/*.*"/>
	        </delete>
			<delete dir="${bin.dir}"/>
	    </target>
	
	<!-- TARGET : prepare -->
	    <target name="prepare">
	        <mkdir dir="${bin.dir}"/>
	    </target>
	
	<!-- TARGET : compile -->
	    <target name="compile" depends="clean, prepare">
	        <javac srcdir="${src.dir}" destdir="${bin.dir}" classpathref="full.classpath" includeantruntime="no">
	            <include name="**/*.java"/>
	        </javac>
	    </target>
	
	<!-- TARGET : enhance -->
	    <target name="enhance" depends="compile">
	    	<taskdef name="enhancer" classpathref="full.classpath" classname="org.datanucleus.enhancer.EnhancerTask" />
	    	
	   		<enhancer classpathref="full.classpath" failonerror="true">
	            <sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
	            <fileset dir="${bin.dir}">
	                <include name="**/*.class"/>
	            </fileset>
	   		</enhancer>
	    </target>
	
	<!-- TARGET : SchemaTool "create" -->
	    <target name="database" depends="enhance">
	        <taskdef name="schematool" classpathref="full.classpath" classname="org.datanucleus.store.schema.SchemaToolTask"/>

	        <schematool mode="create" classpathref="full.classpath" failonerror="true" props="datanucleus.properties">
	            <sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
	            <fileset dir="${bin.dir}">
	                <include name="**/*.class"/>
	            </fileset>
	        </schematool>
	    </target>
	
	<!-- TARGET : SchemaTool "delete" -->
	    <target name="deleteschema">
	        <taskdef name="schematool" classpathref="full.classpath" classname="org.datanucleus.store.schema.SchemaToolTask"/>

	    	<schematool mode="delete" classpathref="full.classpath" failonerror="true" props="datanucleus.properties">
	    		<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
	        	<fileset dir="${bin.dir}">
	                <include name="**/*.class"/>
	            </fileset>
	        </schematool>
	    </target>

	<target name="help">
		<echo>Usage: ant [database | build | export | server ]</echo>
	</target>

	
	<target name="build" description="Builds the project">
		<delete dir="${bin.dir}"/>
		<mkdir dir="${bin.dir}"/>
		<javac srcdir="${src.dir}" destdir="${bin.dir}" classpathref="full.classpath" deprecation="true" fork="true" includeantruntime="no"/>
    </target>

	<target name="export" depends="build" description="Export the project into a .jar file">
		<delete dir="${dist.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<jar destfile="${dist.dir}/${export.file}" basedir="${bin.dir}" includes="**/I**.class, **/**DTO.class"/>
	</target>

	<target name="server" depends="build" description="Runs Server program">
		<java classname="easybooking.server.manager.BookManagerServer" classpathref="full.classpath" fork="true">
        	<jvmarg value="-Djava.rmi.server.codebase=file:${bin.dir}/"/>
			<jvmarg value="-Djava.security.policy=${policy.file}"/>
        	<arg value="${rmireg.server.IP}"/>
	 		<arg value="${rmireg.server.port}"/>
			<arg value="${server.name}"/>

        </java>
    </target>
</project>
